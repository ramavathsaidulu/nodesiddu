<!DOCTYPE html>
<html>
<head>
	<title></title>
	<style>
		body{ 
	                      padding: 0px;
						  margin: 0px;
						  
						  }
                      .menu_bar{
	                      padding-top:10px;
						  padding-bottom: 10px;
	                      margin-left: 50px;
	                      text-align:left;
	                      font-size:25px;
	                      width:100%;
	                      height:15%;
		                   }
		                   .back{
                            background-color: #ffe6e6;
		                   }
	</style>
</head>
<body>
<form>
	<div class="back">
	<div class="menu_bar">
	    
		 <a href="home.ejs">Home</a>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
		 <a href="Login.ejs">Login</a>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
         <a href="about.ejs">About_Us</a>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
         <a href="contact.ejs">Contect</a>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
		 </div>
		</div>
		<div class="body">
			<h1>Express Overview</h1>
			<p>Express is a minimal and flexible Node.js web application framework that provides a robust set of features to develop web and mobile applications. It facilitates the rapid development of Node based Web applications. Following are some of the core features of Express framework −

Allows to set up middlewares to respond to HTTP Requests.

Defines a routing table which is used to perform different actions based on HTTP Method and URL.

Allows to dynamically render HTML Pages based on passing arguments to templates.</p>
			<h2>Installing Express</h2>
            <p>Firstly, install the Express framework globally using NPM so that it can be used to create a web application using node terminal.

$ npm install express --save
The above command saves the installation locally in the node_modules directory and creates a directory express inside node_modules. You should install the following important modules along with express −

body-parser − This is a node.js middleware for handling JSON, Raw, Text and URL encoded form data.

cookie-parser − Parse Cookie header and populate req.cookies with an object keyed by the cookie names.

multer − This is a node.js middleware for handling multipart/form-data.

</p>

		</div>
		 
         

</form>
</body>
</html>